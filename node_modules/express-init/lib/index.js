// Generated by CoffeeScript 1.9.1
(function() {
  var _, async, recurseStack;

  _ = require('lodash');

  async = require('async');

  recurseStack = function(app, stack) {
    var s;
    if (!_(stack).isArray()) {
      stack = [stack];
    }
    s = stack.map(function(layer) {
      var init, initializers, ref, ref1, ref2;
      initializers = [];
      if (((ref = layer.route) != null ? ref.stack : void 0) != null) {
        initializers = initializers.concat(recurseStack(app, layer.route.stack));
      }
      if (((ref1 = layer.handle) != null ? ref1.stack : void 0) != null) {
        initializers = initializers.concat(recurseStack(app, layer.handle.stack));
      }
      init = layer.init || ((ref2 = layer.handle) != null ? ref2.init : void 0);
      if (init) {
        initializers.push(function(callback) {
          var args;
          if (app[init] === true) {
            return callback();
          }
          args = [];
          if (init.length === 2) {
            args.push(app);
          }
          args.push(function(err) {
            app[init] = !err;
            return callback(err);
          });
          return init.apply(init, args);
        });
      }
      return initializers;
    });
    return _(s).flatten().compact().valueOf();
  };

  module.exports = function(app, callback) {
    var initializers;
    initializers = recurseStack(app, app._router.stack);
    return async.series(initializers, function(err) {
      return callback(err);
    });
  };

}).call(this);
